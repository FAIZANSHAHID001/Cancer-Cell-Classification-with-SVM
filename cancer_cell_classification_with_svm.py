# -*- coding: utf-8 -*-
"""Cancer Cell Classification with SVM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TICNdE86hEAK5T0PafbT5dM7TRDVAHaN
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df = pd.read_csv('cell_samples.csv')

df.tail()
df['Class'].value_counts()

B_df = df[df['Class']==2][0:200]
M_df = df[df['Class']==4][0:200]

axes= B_df.plot(kind="scatter", x='Clump', y='UnifSize', color='blue', label='Benign')
M_df.plot(kind="scatter", x='Clump', y='UnifSize', color='red', label='Malgent', ax=axes)

df.dtypes

df = df[pd.to_numeric(df['BareNuc'], errors='coerce').notnull()]
df['BareNuc'] = df['BareNuc'].astype('int')
df.dtypes

df.columns

df.drop(['ID'], axis=1, inplace=True)

df.head()

X = np.asarray(df)
Y = np.asarray(df['Class'])
Y[0:5]

from sklearn.model_selection import train_test_split

X_train,X_test, Y_train, Y_test= train_test_split(X, Y, test_size=0.2, random_state=4)
#546 x 10
X_train.shape
#137 x 10
X_test.shape
#546
Y_train.shape
#137
Y_test.shape

from sklearn import svm

classifier = svm.SVC(kernel='linear', gamma='auto', C=2 )
classifier.fit(X_train, Y_train)
Y_predict= classifier.predict(X_test)

from sklearn.metrics import classification_report

print(classification_report(Y_test, Y_predict))